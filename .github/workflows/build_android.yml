name: Build Android APK

on:
  workflow_dispatch:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Java 17 за sdkmanager/Gradle
      - name: Set up Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      - name: Install system deps
        run: |
          sudo apt-get update -y
          sudo apt-get install -y build-essential python3-pip zip unzip git curl

      - name: Install buildozer
        run: |
          python3 -m pip install -U pip
          pip install buildozer==1.5.0 cython==0.29.36

      # Инсталира коректно cmdline-tools/sdkmanager (без ръчни zip-ове)
      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Accept licenses & install Android packages
        run: |
          yes | sdkmanager --licenses
          sdkmanager "platform-tools" "platforms;android-33" "build-tools;33.0.2" "ndk;25.2.9519653"
          echo "ANDROID_NDK_HOME=$ANDROID_SDK_ROOT/ndk/25.2.9519653" >> "$GITHUB_ENV"

      - name: Build APK
        env:
          ANDROID_SDK_ROOT: "${{ env.ANDROID_SDK_ROOT }}"
          ANDROID_HOME: "${{ env.ANDROID_SDK_ROOT }}"
          ANDROID_NDK_HOME: "${{ env.ANDROID_NDK_HOME }}"
          # python-for-android уважава точно тези две:
          ANDROIDSDK: "${{ env.ANDROID_SDK_ROOT }}"
          ANDROIDNDK: "${{ env.ANDROID_NDK_HOME }}"
        run: |
          set -e
          export PATH="$JAVA_HOME/bin:$ANDROID_SDK_ROOT/build-tools/33.0.2:$ANDROID_SDK_ROOT/platform-tools:$ANDROID_SDK_ROOT/cmdline-tools/latest/bin:$PATH"

          echo "== SDK = $ANDROID_SDK_ROOT"
          echo "== NDK = $ANDROID_NDK_HOME"
          which sdkmanager || true
          which aidl || true

          # 0) Почисти вътрешните кешове на Buildozer
          buildozer android clean || true

          # 1) Принудително насочи вътрешния .buildozer към системния SDK/NDK
          mkdir -p .buildozer/android/platform
          rm -rf .buildozer/android/platform/android-sdk || true
          rm -rf .buildozer/android/platform/android-ndk || true
          ln -sfn "$ANDROID_SDK_ROOT" .buildozer/android/platform/android-sdk
          ln -sfn "$ANDROID_NDK_HOME" .buildozer/android/platform/android-ndk

          # 2) Увери се, че build-tools/aidl съществува там, където buildozer го търси
          mkdir -p .buildozer/android/platform/android-sdk/build-tools
          if [ -f "$ANDROID_SDK_ROOT/build-tools/33.0.2/aidl" ]; then
            cp "$ANDROID_SDK_ROOT/build-tools/33.0.2/aidl" .buildozer/android/platform/android-sdk/build-tools/aidl
            chmod +x .buildozer/android/platform/android-sdk/build-tools/aidl
          fi

          echo "== Debug listing =="
          ls -la .buildozer/android/platform/android-sdk || true
          ls -la .buildozer/android/platform/android-sdk/build-tools || true

          # 3) Истинският билд
          buildozer -v android debug || {
            echo "=== tail buildozer.log ==="
            [ -f buildozer.log ] && tail -n 300 buildozer.log || true
            exit 1
          }

      - name: Upload Logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: build-logs
          path: |
            buildozer.log
            .buildozer/android/platform/android-sdk/build-tools/aidl

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: veresia-app-debug
          path: bin/*.apk
