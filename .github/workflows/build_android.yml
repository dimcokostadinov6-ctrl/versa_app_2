name: Build Android APK
on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - '**.py'
      - 'buildozer.spec'
      - '.github/workflows/build_android.yml'

jobs:
  build:
    runs-on: ubuntu-22.04

    env:
      ANDROID_SDK_ROOT: /home/runner/android-sdk
      ANDROID_HOME: /home/runner/android-sdk

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install system deps
        run: |
          sudo apt-get update
          sudo apt-get install -y git zip unzip python3-dev libffi-dev libssl-dev \
                                  liblzma-dev libjpeg-dev libfreetype6-dev zlib1g-dev curl

      # SDK + build-tools (33.0.2 –∏ 36.1.0) + NDK 25.2
      - name: Install Android SDK + build-tools + NDK
        run: |
          set -eux
          mkdir -p "$ANDROID_SDK_ROOT/cmdline-tools"
          curl -fsSL https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip -o /tmp/cmdtools.zip
          unzip -q /tmp/cmdtools.zip -d "$ANDROID_SDK_ROOT/cmdline-tools"
          mv "$ANDROID_SDK_ROOT/cmdline-tools/cmdline-tools" "$ANDROID_SDK_ROOT/cmdline-tools/latest"
          export PATH="$ANDROID_SDK_ROOT/cmdline-tools/latest/bin:$ANDROID_SDK_ROOT/platform-tools:$PATH"
          mkdir -p "$HOME/.android" && echo "###" > "$HOME/.android/repositories.cfg"
          yes | sdkmanager --licenses
          sdkmanager "platform-tools" "platforms;android-33" "build-tools;33.0.2" "build-tools;36.1.0" "ndk;25.2.9519653"
          yes | sdkmanager --licenses

      - name: Install buildozer
        run: |
          python -m pip install --upgrade pip
          pip install --user cython==0.29.36 buildozer
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      # –§–æ—Ä—Å–∏—Ä–∞–º–µ —Å—Ç–∞–±–∏–ª–Ω–∏ –≤–µ—Ä—Å–∏–∏ –∏ —Å–≤—ä—Ä–∑–≤–∞–º–µ p4a –∫—ä–º –Ω–∞—à–∏—è SDK
      - name: Force p4a to use our SDK/NDK (and stable tools)
        run: |
          sed -i 's/^orientation *= *.*/orientation = landscape/' buildozer.spec || true
          grep -q '^android.api' buildozer.spec && sed -i 's/^android.api *= *.*/android.api = 33/' buildozer.spec || echo 'android.api = 33' >> buildozer.spec
          grep -q '^android.build_tools_version' buildozer.spec && sed -i 's/^android.build_tools_version *= *.*/android.build_tools_version = 33.0.2/' buildozer.spec || echo 'android.build_tools_version = 33.0.2' >> buildozer.spec
          mkdir -p "$HOME/.buildozer/android/platform"
          if [ ! -e "$HOME/.buildozer/android/platform/android-sdk" ]; then
            ln -s "$ANDROID_SDK_ROOT" "$HOME/.buildozer/android/platform/android-sdk"
          fi

      # üëá SHIM: —Å—ä–∑–¥–∞–≤–∞–º–µ legacy tools/bin –∏ –Ω–∞—Å–æ—á–≤–∞–º–µ sdkmanager –∫—ä–º —Ä–µ–∞–ª–Ω–∏—è
      - name: Create legacy 'tools/bin/sdkmanager' shim
        run: |
          LEGACY="$HOME/.buildozer/android/platform/android-sdk/tools/bin"
          REAL="$ANDROID_SDK_ROOT/cmdline-tools/latest/bin"
          mkdir -p "$LEGACY"
          ln -sf "$REAL/sdkmanager" "$LEGACY/sdkmanager"
          ln -sf "$REAL/avdmanager" "$LEGACY/avdmanager" || true
          ln -sf "$REAL/apkanalyzer" "$LEGACY/apkanalyzer" || true
          ls -la "$LEGACY"

      - name: Build APK (debug)
        env:
          ANDROIDSDK: /home/runner/android-sdk
          ANDROIDNDK: /home/runner/android-sdk/ndk/25.2.9519653
        run: buildozer android debug

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: veresia-app-debug
          path: bin/*.apk
