name: Build Android APK

on:
  workflow_dispatch:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install system deps
        run: |
          sudo apt-get update -y
          sudo apt-get install -y \
            build-essential python3-pip zip unzip openjdk-17-jdk git curl

      - name: Install buildozer
        run: |
          python3 -m pip install -U pip
          pip install buildozer==1.5.0 cython==0.29.36

      - name: Set up Android SDK & NDK manually
        run: |
          mkdir -p $HOME/android
          cd $HOME/android

          # SDK
          curl -o sdk-tools.zip https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip
          unzip -q sdk-tools.zip -d cmdline-tools
          mkdir -p cmdline-tools/latest
          mv cmdline-tools/cmdline-tools/* cmdline-tools/latest/ || true

          export ANDROID_SDK_ROOT=$HOME/android
          export PATH=$ANDROID_SDK_ROOT/cmdline-tools/latest/bin:$PATH

          yes | sdkmanager --licenses
          sdkmanager --install \
            "platform-tools" \
            "platforms;android-33" \
            "build-tools;33.0.2" \
            "ndk;25.2.9519653"

          echo "ANDROID_SDK_ROOT=$HOME/android" >> $GITHUB_ENV
          echo "ANDROID_NDK_HOME=$HOME/android/ndk/25.2.9519653" >> $GITHUB_ENV

      - name: Build APK
        env:
          ANDROID_SDK_ROOT: "${{ env.ANDROID_SDK_ROOT }}"
          ANDROID_NDK_HOME: "${{ env.ANDROID_NDK_HOME }}"
        run: |
          export PATH=$ANDROID_SDK_ROOT/build-tools/33.0.2:$ANDROID_SDK_ROOT/platform-tools:$PATH

          echo "== SDK = $ANDROID_SDK_ROOT"
          echo "== NDK = $ANDROID_NDK_HOME"
          which aidl || true

          # Принудително пренасочване на Buildozer да използва нашия SDK/NDK
          mkdir -p .buildozer/android/platform
          rm -rf .buildozer/android/platform/android-sdk || true
          rm -rf .buildozer/android/platform/android-ndk || true
          ln -sfn "$ANDROID_SDK_ROOT" .buildozer/android/platform/android-sdk
          ln -sfn "$ANDROID_NDK_HOME" .buildozer/android/platform/android-ndk

          # Копирай aidl ръчно (ако Buildozer го иска)
          mkdir -p .buildozer/android/platform/android-sdk/build-tools
          cp "$ANDROID_SDK_ROOT/build-tools/33.0.2/aidl" .buildozer/android/platform/android-sdk/build-tools/aidl || true
          chmod +x .buildozer/android/platform/android-sdk/build-tools/aidl || true

          buildozer android debug || {
            echo "=== tail buildozer.log ==="
            [ -f buildozer.log ] && tail -n 200 buildozer.log || true
            exit 1
          }

      - name: Upload Logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: build-logs
          path: |
            buildozer.log
            .buildozer/android/platform/android-sdk/build-tools/aidl

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: veresia-app-debug
          path: bin/*.apk
